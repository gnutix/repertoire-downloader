# defines which sources and platforms to use during the script execution
app:
    sources:
        - trello
    platforms:
        - youtube

sources:
    trello:
        class_name: \App\Source\Trello\Trello

        # can be fetched from: https://trello.com/app-key
        api_key: beb1cf49bfceca0ea4f7dc063fe54f37

        # full URL would be: https://trello.com/b/MkYHGxzY/
        board_id: MkYHGxzY

        downloads_paths:

            # defines which (relative) path to save the videos in
            # will be appended to platforms/*/downloads_paths/root/path
            videos:

                # available variables: %list_name%, %card_name%
                path: '%list_name%/%card_name%'

                # defines a pattern to replace by a directory separator in the videos path
                replace_pattern_by_directory_separator: ' - '

platforms:
    youtube:
        class_name: App\Platform\YouTube\YouTube

        # defines which video files to download
        # the key should match those of "youtube_dl_options" and the value must be the corresponding file extension
        download_video_files:
            audio: mp3
            video: mp4

        downloads_paths:

            # defines which (absolute) path to save the videos in
            # available variables: %project_root%
            root:
                path: '%project_root%/downloads'

            # defines which (relative) path to save the video files in
            # will be appended to platforms/*/downloads_paths/root/path and sources/*/downloads_paths/videos/path
            video_files:

                # available variables: see https://github.com/rg3/youtube-dl#output-template
                _: &DOWNLOADS_PATH_FORMAT '%(id)s (%(uploader)s, %(upload_date)s)/%(title)s.%(ext)s'

                # available variables: %video_id%, %file_extension%
                path: '%video_id% (*)' # matches '%(id)s (%(uploader)s, %(upload_date)s)'

                # available variables: %video_id%, %file_extension%
                filename: '*.%file_extension%' # matches '%(title)s.%(ext)s'

        # Options passed to the 'youtube-dl' python library. Each options set represents one download attempt.
        youtube_dl_options:

            # Default options for every file type
            _: &DEFAULT_YOUTUBE_DL_OPTION
                continue: true # resume video download when it has failed in the middle of it (using .{ext}.part file)
                add-metadata: true # ensure there's mp3 ID3 tags on the downloaded files
                output: *DOWNLOADS_PATH_FORMAT

            audio:
                -
                    <<: *DEFAULT_YOUTUBE_DL_OPTION
                    extract-audio: true
                    audio-format: mp3
                    audio-quality: 0 # best

            video:
                -
                    <<: *DEFAULT_YOUTUBE_DL_OPTION
                    format: 'mp4[height=720]'
                -
                    <<: *DEFAULT_YOUTUBE_DL_OPTION
                    format: 'mp4[height=1080]'
                -
                    <<: *DEFAULT_YOUTUBE_DL_OPTION
                    format: 'mp4[height=480]'
